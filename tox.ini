# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing

[tox]
envlist = test_env, unit_test, integration_test, typechecks, lint, stylechecks
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}

[testenv:test_env]
deps =
    -rrequirements/test_requirements.txt

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

[testenv:unit_test]
envdir = {toxworkdir}/test_env
deps = 
    {[testenv:test_env]deps}
setenv =
    {[testenv:test_env]setenv}

commands=
	python classification_model/train_pipeline.py
	pytest \
	-s \
	-vv \
	{posargs:tests/unit/}

[testenv:integration_test]
envdir = {toxworkdir}/test_env
deps = 
    {[testenv:test_env]deps}
setenv =
    {[testenv:test_env]setenv}

commands=
	python classification_model/train_pipeline.py
	pytest \
	-s \
	-vv \
	{posargs:tests/integration/}

[testenv:train]
envdir = {toxworkdir}/test_env
deps =
	{[testenv:test_env]deps}

setenv =
	{[testenv:test_env]setenv}

commands=
	python classification_model/train_pipeline.py

[testenv:run]
envdir = {toxworkdir}/test_env
deps = 
    {[testenv:test_env]deps}
setenv =
    {[testenv:test_env]setenv}
commands = 
    python ml_api/main.py

[testenv:typechecks]
envdir = {toxworkdir}/test_env

deps =
	{[testenv:test_env]deps}

commands = {posargs:mypy classification_model ml_api tests}


[testenv:stylechecks]
envdir = {toxworkdir}/test_env

deps =
	{[testenv:test_env]deps}

commands = {posargs:flake8 classification_model ml_api tests}


[testenv:lint]
envdir = {toxworkdir}/test_env

deps =
	{[testenv:test_env]deps}

commands =
	isort classification_model ml_api tests
	black classification_model ml_api tests

[flake8]
exclude = .git,__pycache__,__init__.py,mypy_cache,.pytest_cache,.venv,alembic
max-line-length = 88

[pytest]
log_cli_level = WARNING
